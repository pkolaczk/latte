use latte::*;

pub const KEYSPACE = latte::param!("keyspace", "latte");
pub const TABLE = latte::param!("table", "sai_vector");

// Total number of rows in the table:
pub const ROW_COUNT = latte::param!("rows", 100000);

// Column cardinalities:
pub const LC = latte::param!("lc", 10);
pub const MC = latte::param!("hc", 100);
pub const HC = latte::param!("hc", 1000);

// Limit on the number of rows to fetch in a single query:
pub const READ_SIZE = latte::param!("read_size", 100);

pub const HYBRID_QUERY_2 = `SELECT * FROM ${KEYSPACE}.${TABLE} WHERE time1 >= ? AND time1 < ? AND mc > ? AND mc <?`;
pub const HYBRID_QUERY_POSTFIX = `ORDER BY vec ANN OF ? LIMIT ${READ_SIZE}`;

pub fn two_restrictions_params(i) {
    let time1_point = hash_range(i, ROW_COUNT - READ_SIZE);
    let mc = hash2(i, 33311) % MC;
    let vec = normal_vec(i, 2, 0.0, 1.0);
    (time1_point, time1_point + READ_SIZE/10, mc, mc + READ_SIZE/10, vec)
}
